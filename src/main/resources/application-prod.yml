server:
  port: 10004

nacos:
  config:
    server-addr: 172.18.198.8:8848,172.18.198.9:8848,172.18.198.10:8848
    group: prod

jkqj:
  rpc:
    client:
      user: http://172.18.198.10:10003
      authorization: http://172.18.198.10:10003
      biz-user: http://172.18.198.10:10002
  gateway:
    nacos:
      group: ${spring.profiles.active}
      globalId: f-api-gateway-router-properties.yaml
      routeTriggerId: DUBBO_GATEWAY_TRIGGER.TEXT
      routeIdSuffix: _gw_config.yaml

dubbo:
  application:
    parameters:
      unicast: false
  protocol:
    name: dubbo
    port: -1
    threadpool: fixed
    threads: 30
    iothreads: 3
  metadata-report:
    address: nacos://172.18.198.8:8848
  registry:
    protocol: nacos
    address: 172.18.198.8:8848
  scan:
    base-packages: com.jkqj.base.gateway
  provider:
    group: ${spring.profiles.active}
    filter: -generic,custom
  consumer:
    group: ${spring.profiles.active}
    layer: gw
    check: false
    timeout: 30000
    retries: 1
    async: false
    actives: 0

nacos.config.backup:
  passHeaders:
    - device-id
    - hardware
    - os
    - os-version
    - location
    - ip
    - network-type
    - timestamp
    - user-agent
    - resolution
    - platform
    - app-key
    - app-version
    - app-vsn
    - trace-id
    - token

  rules:
    - path: /qj/v1/auth/token/login/mobile
      methods:
        - post
      description: login by mobile
      login: false
      passHeaders:
        - paltform
        - os
      traceHeader: trace-id
      proxyPass: "http://uc:/qj/v1/auth/token/login/mobile"

    - path: /qj/v1/user/get
      methods:
        - get
        - post
      login: true
      proxyPass: dubbo://local:com.jkqj.uc.interfaces.api.impl.UserApiService:get::1.0.0

    - path: /demo/ping
      methods:
        - get
        - post
      login: false
      proxyPass: dubbo://:com.jkqj.base.gateway.invoker.demo.DemoService:ping:(java.lang.String name, int age, boolean isMale, [Ljava.lang.String; hobbies):1.0.0

    - path: /demo/ping1
      methods:
        - get
        - post
      login: false
      proxyPass: dubbo://:com.jkqj.base.gateway.invoker.demo.DemoService:ping1:(com.jkqj.base.gateway.invoker.demo.PingRequest):1.0.0

    - path: /wt/v1/interview/comment/list
      methods:
        - get
        - post
      login: false
      proxyPass: "dubbo://:com.jkqj.zemu.rpc.server.InterviewCommentDubboService:getCommentList:(com.jkqj.zemu.rpc.server.model.interview.GetCommentListRequest):1.0.0"

    - path: /dubbo/comment/test
      methods:
        - get
        - post
      login: false
      proxyPass: "dubbo://:com.jkqj.zemu.rpc.server.InterviewCommentDubboService:dubboCommentTest:(java.lang.String comment):1.0.0"

    - path: /dubbo/top-tags
      methods:
        - get
      login: false
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.CommonDubboService:getTopTags::1.0.0"

    - path: /wt/v1/interview/unanswer/list
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:searchUnAnswered:(com.jkqj.zemu.rpc.server.model.UnAnswerSearchRequest):1.0.0"

    - path: /wt/v1/interview/answer/list
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:searchAnswered:(com.jkqj.zemu.rpc.server.model.SearchRequest):1.0.0"

    - path: /wt/v1/interview/cancelled/list
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:searchCancelled:(com.jkqj.zemu.rpc.server.model.SearchRequest):1.0.0"

    - path: /wt/v1/interview/auditfailed/list
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:searchAuditFailed:(com.jkqj.zemu.rpc.server.model.SearchRequest):1.0.0"

    - path: /wt/v1/interview/passed/list
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:searchPassed:(com.jkqj.zemu.rpc.server.model.SearchRequest):1.0.0"

    - path: /wt/v1/interview/failed/list
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:searchFailed:(com.jkqj.zemu.rpc.server.model.SearchRequest):1.0.0"


    - path: /wt/v1/interview/auditing/list
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:searchAuditing:(com.jkqj.zemu.rpc.server.model.SearchRequest):1.0.0"

    - path: /wt/v1/interview/invitation/detail
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:detailInvitation:(com.jkqj.zemu.rpc.server.model.DetailRequest):1.0.0"

    - path: /wt/v1/interview/detail
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:getInterviewDetail:(com.jkqj.zemu.interview.service.invitation.request.BInterviewCommonRequest):1.0.0"

    - path: /wt/v1/invitation/generate
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewInitDubboService:generateInvitation:(com.jkqj.zemu.interview.service.invitation.request.GenerateInvitationRequest):1.0.0"

    - path: /wt/v1/invitation/regenerate
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewInitDubboService:regenerateInvitation:(com.jkqj.zemu.interview.service.invitation.request.RegenerateInvitationRequest):1.0.0"

    - path: /wt/v1/invitation/send-sms
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewInitDubboService:sendSms:(com.jkqj.zemu.interview.service.invitation.request.BInterviewCommonRequest):1.0.0"

    - path: /wt/v1/invitation/preview
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewInitDubboService:previewInvitation:(com.jkqj.zemu.interview.service.invitation.request.BInterviewCommonRequest):1.0.0"

    - path: /wt/v1/cv/add
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewCvDubboService:addCompanyCvForInterview:(com.jkqj.zemu.rpc.server.model.interview.CompanyCvAddRequest):1.0.0"

    - path: /wt/v1/cv/delete
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewCvDubboService:deleteCompanyCv:(com.jkqj.zemu.rpc.server.model.interview.CompanyCvDeleteRequest):1.0.0"

    - path: /wt/v1/cv/checkCompanyCv
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewCvDubboService:checkCompanyCv:(com.jkqj.zemu.rpc.server.model.permit.PermitCallbackRequest):1.0.0"

    - path: /wt/v1/attachment/checkAttachment
      methods:
        - get
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewCvDubboService:checkAttachment:(com.jkqj.zemu.rpc.server.model.permit.PermitCallbackRequest):1.0.0"

    - path: /wt/v1/interview/extend
      methods:
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:extend:(com.jkqj.zemu.interview.service.interview.request.ExtendInterviewRequest):1.0.0"

    - path: /wt/v1/interview/cancel
      methods:
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:cancel:(com.jkqj.zemu.interview.service.interview.request.CancelInterviewRequest):1.0.0"

    - path: /wt/v1/interview/pass
      methods:
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:pass:(com.jkqj.zemu.interview.service.interview.request.InterviewIdRequest):1.0.0"

    - path: /wt/v1/interview/fail
      methods:
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewDubboService:fail:(com.jkqj.zemu.interview.service.interview.request.FailInterviewRequest):1.0.0"

    - path: /wt/v1/interview/getCommentList
      methods:
        - get
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewCommentDubboService:getCommentList:(com.jkqj.zemu.rpc.server.model.interview.GetCommentListRequest):1.0.0"

    - path: /wt/v1/interview/clickTag
      methods:
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewCommentDubboService:clickTag:(com.jkqj.zemu.rpc.server.model.interview.ClickTagRequest):1.0.0"

    - path: /wt/v1/interview/comment
      methods:
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.zemu.rpc.server.InterviewCommentDubboService:comment:(com.jkqj.zemu.rpc.server.model.interview.CommentRequest):1.0.0"

    - path: /dc/v1/event/track
      methods:
        - post
      login: false
      proxyPass: "dubbo://prod:com.jkqj.dc.rpc.EventTrackRpc:track:(com.jkqj.dc.rpc.request.EncodedEventTrackRequest):1.0.0"

    - path: /dc/v1/stat/interview/question-url
      methods:
        - get
      login: true
      proxyPass: "dubbo://prod:com.jkqj.dc.rpc.InterviewStatRpc:questionAction:(com.jkqj.dc.rpc.request.InterviewStatRequest):1.0.0"

    - path: /admin/v1/category/add
      methods:
        - post
      login: true
      proxyPass: "dubbo://prod:com.jkqj.admin.general.rpc.CategoryRpc:addCategory:(com.jkqj.admin.general.service.vo.AddCategory):1.0.0"

    - path: /qj/v1/robot/verification-code/fetch
      methods:
        - post
      login: false
      proxyPass: "http://uc:/qj/v1/robot/verification-code/fetch"

    - path: /**/*
      methods:
        - get
        - post
      login: true
      passHeaders:
        - paltform
        - os
      traceHeader: trace-id
      proxyPass: "http://bserver:{request_uri}"
  upstreams:
    - id: bserver
      type: http
      host: 172.18.198.10
      port: 10002
    - id: uc
      type: http
      host: 172.18.198.10
      port: 10003

# prometheus
management:
  endpoint:
    metrics:
      enabled: false
    prometheus:
      enabled: true
  endpoints:
    web:
      base-path: /jkqj_monitor
      exposure:
        include: prometheus, health
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
  server:
    port: 19004